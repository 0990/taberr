package printer

import (
	"bytes"
	"fmt"

	"github.com/davyxu/pbmeta"
	"github.com/davyxu/tabtoy/data"
)

type luaWriter struct {
	printer *bytes.Buffer
}

func (self *luaWriter) RepeatedMessageBegin(fd *pbmeta.FieldDescriptor, msg *data.DynamicMessage, indent int) {

	self.printer.WriteString(fmt.Sprintf("%s = {\n", fd.Name()))
}

// Value是消息的字段
func (self *luaWriter) WriteMessageField(fd *pbmeta.FieldDescriptor, msg *data.DynamicMessage, indent int) {

	if indent == 1 {
		self.printer.WriteString("{")

	} else {
		self.printer.WriteString(fmt.Sprintf("%s = {", fd.Name()))
	}

	rawWriteMessage(self.printer, self, msg, indent)

	self.printer.WriteString("}")

}

func (self *luaWriter) RepeatedMessageEnd(fd *pbmeta.FieldDescriptor, msg *data.DynamicMessage, indent int) {
	self.printer.WriteString("}")
}

// 普通值
func (self *luaWriter) WriteValueField(fd *pbmeta.FieldDescriptor, value string, indent int) {

	self.printer.WriteString(fmt.Sprintf("%s = %s", fd.Name(), valueWrapper(fd, value)))
}

func (self *luaWriter) WriteValueSpliter() {

	self.printer.WriteString(", ")
}

func (self *luaWriter) WriteMessage(msg *data.DynamicMessage) {

	self.printer.WriteString("return {\n\n")
	rawWriteMessage(self.printer, self, msg, 0)

	self.printer.WriteString("\n\n}")
}

func NewLuaWriter(printer *bytes.Buffer) IWriter {

	printer.WriteString("-- Generated by github.com/davyxu/tabtoy\n")

	return &luaWriter{
		printer: printer,
	}
}
