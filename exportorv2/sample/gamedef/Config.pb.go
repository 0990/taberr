// Code generated by protoc-gen-go.
// source: Config.proto
// DO NOT EDIT!

/*
Package gamedef is a generated protocol buffer package.

It is generated from these files:
	Config.proto

It has these top-level messages:
	Config
	Prop
	SampleDefine
	ExpDefine
*/
package gamedef

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ActorType int32

const (
	// 格斗士
	ActorType_Fighter ActorType = 0
	// 超能
	ActorType_Power ActorType = 21
)

var ActorType_name = map[int32]string{
	0:  "Fighter",
	21: "Power",
}
var ActorType_value = map[string]int32{
	"Fighter": 0,
	"Power":   21,
}

func (x ActorType) String() string {
	return proto.EnumName(ActorType_name, int32(x))
}
func (ActorType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Config struct {
	Sample []*SampleDefine `protobuf:"bytes,1,rep,name=Sample,json=sample" json:"Sample,omitempty"`
	Exp    []*ExpDefine    `protobuf:"bytes,2,rep,name=Exp,json=exp" json:"Exp,omitempty"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Config) GetSample() []*SampleDefine {
	if m != nil {
		return m.Sample
	}
	return nil
}

func (m *Config) GetExp() []*ExpDefine {
	if m != nil {
		return m.Exp
	}
	return nil
}

type Prop struct {
	// 血量
	HP int32 `protobuf:"varint,1,opt,name=HP,json=hP" json:"HP,omitempty"`
	// 攻击速率
	AttackRate float32 `protobuf:"fixed32,2,opt,name=AttackRate,json=attackRate" json:"AttackRate,omitempty"`
	// 额外类型
	ExType ActorType `protobuf:"varint,3,opt,name=ExType,json=exType,enum=gamedef.ActorType" json:"ExType,omitempty"`
}

func (m *Prop) Reset()                    { *m = Prop{} }
func (m *Prop) String() string            { return proto.CompactTextString(m) }
func (*Prop) ProtoMessage()               {}
func (*Prop) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type SampleDefine struct {
	ID            int64     `protobuf:"varint,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	Name          string    `protobuf:"bytes,2,opt,name=Name,json=name" json:"Name,omitempty"`
	IconID        int32     `protobuf:"varint,3,opt,name=IconID,json=iconID" json:"IconID,omitempty"`
	NumericalRate float32   `protobuf:"fixed32,4,opt,name=NumericalRate,json=numericalRate" json:"NumericalRate,omitempty"`
	ItemID        int32     `protobuf:"varint,5,opt,name=ItemID,json=itemID" json:"ItemID,omitempty"`
	BuffID        []int32   `protobuf:"varint,6,rep,packed,name=BuffID,json=buffID" json:"BuffID,omitempty"`
	Type          ActorType `protobuf:"varint,7,opt,name=Type,json=type,enum=gamedef.ActorType" json:"Type,omitempty"`
	SkillID       []int32   `protobuf:"varint,8,rep,packed,name=SkillID,json=skillID" json:"SkillID,omitempty"`
	SingleStruct  *Prop     `protobuf:"bytes,9,opt,name=SingleStruct,json=singleStruct" json:"SingleStruct,omitempty"`
	StrStruct     []*Prop   `protobuf:"bytes,10,rep,name=StrStruct,json=strStruct" json:"StrStruct,omitempty"`
}

func (m *SampleDefine) Reset()                    { *m = SampleDefine{} }
func (m *SampleDefine) String() string            { return proto.CompactTextString(m) }
func (*SampleDefine) ProtoMessage()               {}
func (*SampleDefine) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SampleDefine) GetSingleStruct() *Prop {
	if m != nil {
		return m.SingleStruct
	}
	return nil
}

func (m *SampleDefine) GetStrStruct() []*Prop {
	if m != nil {
		return m.StrStruct
	}
	return nil
}

type ExpDefine struct {
	Level       int32     `protobuf:"varint,1,opt,name=Level,json=level" json:"Level,omitempty"`
	Exp         int32     `protobuf:"varint,2,opt,name=Exp,json=exp" json:"Exp,omitempty"`
	BoolChecker bool      `protobuf:"varint,3,opt,name=BoolChecker,json=boolChecker" json:"BoolChecker,omitempty"`
	Type        ActorType `protobuf:"varint,4,opt,name=Type,json=type,enum=gamedef.ActorType" json:"Type,omitempty"`
}

func (m *ExpDefine) Reset()                    { *m = ExpDefine{} }
func (m *ExpDefine) String() string            { return proto.CompactTextString(m) }
func (*ExpDefine) ProtoMessage()               {}
func (*ExpDefine) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*Config)(nil), "gamedef.Config")
	proto.RegisterType((*Prop)(nil), "gamedef.Prop")
	proto.RegisterType((*SampleDefine)(nil), "gamedef.SampleDefine")
	proto.RegisterType((*ExpDefine)(nil), "gamedef.ExpDefine")
	proto.RegisterEnum("gamedef.ActorType", ActorType_name, ActorType_value)
}

func init() { proto.RegisterFile("Config.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 432 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x52, 0xdd, 0x6a, 0xdb, 0x4c,
	0x14, 0xfc, 0xf4, 0xb7, 0x8a, 0x8e, 0xec, 0x60, 0x0e, 0x5f, 0xca, 0x5e, 0x15, 0xe1, 0x86, 0x22,
	0x52, 0x6a, 0x68, 0xfa, 0x04, 0x49, 0xe4, 0x52, 0x41, 0x09, 0x66, 0xd5, 0xdb, 0x5e, 0xc8, 0xea,
	0x91, 0x2d, 0x2c, 0x69, 0xc5, 0x7a, 0xdd, 0x3a, 0x17, 0x7d, 0xb9, 0x3e, 0x59, 0xd1, 0x5a, 0x51,
	0x4d, 0xa1, 0xbd, 0x9c, 0x39, 0xb3, 0x3b, 0x67, 0x76, 0x16, 0x26, 0x0f, 0xb2, 0x2d, 0xab, 0xcd,
	0xa2, 0x53, 0x52, 0x4b, 0xf4, 0x37, 0x79, 0x43, 0x5f, 0xa9, 0x9c, 0x7f, 0x01, 0x76, 0x1a, 0xe0,
	0x5b, 0x60, 0x59, 0xde, 0x74, 0x35, 0x71, 0x2b, 0x72, 0xe2, 0xf0, 0xf6, 0x6a, 0x31, 0x68, 0x16,
	0x27, 0x3a, 0xa1, 0xb2, 0x6a, 0x49, 0xb0, 0xbd, 0x41, 0x78, 0x0d, 0xce, 0xf2, 0xd8, 0x71, 0xdb,
	0x68, 0x71, 0xd4, 0x2e, 0x8f, 0xdd, 0x20, 0x74, 0xe8, 0xd8, 0xcd, 0xd7, 0xe0, 0xae, 0x94, 0xec,
	0xf0, 0x12, 0xec, 0x8f, 0x2b, 0x6e, 0x45, 0x56, 0xec, 0x09, 0x7b, 0xbb, 0xc2, 0x97, 0x00, 0x77,
	0x5a, 0xe7, 0xc5, 0x4e, 0xe4, 0x9a, 0xb8, 0x1d, 0x59, 0xb1, 0x2d, 0x20, 0x1f, 0x19, 0xbc, 0x01,
	0xb6, 0x3c, 0x7e, 0x7e, 0xea, 0x88, 0x3b, 0x91, 0x15, 0x5f, 0x9e, 0x19, 0xdc, 0x15, 0x5a, 0xaa,
	0x7e, 0x22, 0x18, 0x19, 0xc5, 0xfc, 0xa7, 0x0d, 0x93, 0xf3, 0x15, 0x7b, 0xb3, 0x34, 0x31, 0x66,
	0x8e, 0xb0, 0xab, 0x04, 0x11, 0xdc, 0xc7, 0xbc, 0x39, 0xd9, 0x04, 0xc2, 0x6d, 0xf3, 0x86, 0xf0,
	0x05, 0xb0, 0xb4, 0x90, 0x6d, 0x9a, 0x18, 0x03, 0x4f, 0xb0, 0xca, 0x20, 0xbc, 0x86, 0xe9, 0xe3,
	0xa1, 0x21, 0x55, 0x15, 0x79, 0x6d, 0x76, 0x73, 0xcd, 0x6e, 0xd3, 0xf6, 0x9c, 0x34, 0xa7, 0x35,
	0x35, 0x69, 0xc2, 0xbd, 0xe1, 0xb4, 0x41, 0x3d, 0x7f, 0x7f, 0x28, 0xcb, 0x34, 0xe1, 0x2c, 0x72,
	0x7a, 0x7e, 0x6d, 0x10, 0xbe, 0x06, 0xd7, 0x84, 0xf1, 0xff, 0x1a, 0xc6, 0xd5, 0x4f, 0x1d, 0x21,
	0x07, 0x3f, 0xdb, 0x55, 0x75, 0x9d, 0x26, 0xfc, 0xc2, 0x5c, 0xe0, 0xef, 0x4f, 0x10, 0xdf, 0xc1,
	0x24, 0xab, 0xda, 0x4d, 0x4d, 0x99, 0x56, 0x87, 0x42, 0xf3, 0x20, 0xb2, 0xe2, 0xf0, 0x76, 0x3a,
	0xde, 0xd4, 0xbf, 0xb2, 0x98, 0xec, 0xcf, 0x24, 0xf8, 0x06, 0x82, 0x4c, 0xab, 0x41, 0x0f, 0xa6,
	0xa7, 0x3f, 0xf4, 0xc1, 0xfe, 0x79, 0x3e, 0xff, 0x01, 0xc1, 0x58, 0x1d, 0xfe, 0x0f, 0xde, 0x27,
	0xfa, 0x46, 0xf5, 0x50, 0x98, 0x57, 0xf7, 0x00, 0x67, 0xcf, 0x8d, 0xf7, 0x5c, 0xdf, 0x2e, 0x46,
	0x10, 0xde, 0x4b, 0x59, 0x3f, 0x6c, 0xa9, 0xd8, 0x91, 0x32, 0x2f, 0x79, 0x21, 0xc2, 0xf5, 0x6f,
	0x6a, 0x0c, 0xee, 0xfe, 0x3b, 0xf8, 0xcd, 0x2b, 0x08, 0x46, 0x0a, 0x43, 0xf0, 0x3f, 0x54, 0x9b,
	0xad, 0x26, 0x35, 0xfb, 0x0f, 0x03, 0xf0, 0x56, 0xf2, 0x3b, 0xa9, 0xd9, 0xd5, 0x9a, 0x99, 0xbf,
	0xfb, 0xfe, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6c, 0x91, 0xf6, 0x81, 0xcb, 0x02, 0x00, 0x00,
}
