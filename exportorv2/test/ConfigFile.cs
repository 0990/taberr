// Generated by github.com/davyxu/tabtoy
// Version: 2.0.0
// DO NOT EDIT!!
using System.Collections.Generic;
using System.IO;

namespace gamedef
{
	
	
	
	public partial class ConfigFile : tabtoy.DataObject
	{	
		
		// Sample
		public List<SampleDefine> Sample = new List<SampleDefine>();
		
		// Exp
		public List<ExpDefine> Exp = new List<ExpDefine>();
	
	
	 	Dictionary<long, SampleDefine> _SampleByID = new Dictionary<long, SampleDefine>();
        public SampleDefine GetSampleByID(long ID)
        {
            SampleDefine ret;
            if ( _SampleByID.TryGetValue( ID, out ret ) )
            {
                return ret;
            }

            return null;
        }
	
	 	Dictionary<string, SampleDefine> _SampleByName = new Dictionary<string, SampleDefine>();
        public SampleDefine GetSampleByName(string Name)
        {
            SampleDefine ret;
            if ( _SampleByName.TryGetValue( Name, out ret ) )
            {
                return ret;
            }

            return null;
        }
	
		public void Deserialize( tabtoy.DataReader reader )
		{
			
			// Sample
			if ( reader.MatchTag(0x90000))
			{
				reader.ReadList_Struct<SampleDefine>( this.Sample );
			}
			
			// Exp
			if ( reader.MatchTag(0x90001))
			{
				reader.ReadList_Struct<ExpDefine>( this.Exp );
			}
			

			
            for( int i = 0;i< this.Sample.Count;i++)
            {
                var element = this.Sample[i];
				
                _SampleByID.Add(element.ID, element);                
				
                _SampleByName.Add(element.Name, element);                
				
            }
			
            for( int i = 0;i< this.Exp.Count;i++)
            {
                var element = this.Exp[i];
				
                _SampleByID.Add(element.ID, element);                
				
                _SampleByName.Add(element.Name, element);                
				
            }
			
		}
	}
	

}
